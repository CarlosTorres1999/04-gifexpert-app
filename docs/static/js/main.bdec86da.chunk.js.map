{"version":3,"sources":["components/GifItem.js","utils/api.js","components/Item.js","hooks/useFetchGifs.js","components/ListItem.js","components/Nav.js","components/GifExpertApp.js","index.js"],"names":["GiftItem","img","console","log","className","title","src","url","alt","id","defaultProps","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","images","downsized_medium","Item","value","useState","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifItem","ListItem","values","v","Nav","setCategories","inputValue","setInputValue","href","onSubmit","e","trim","length","preventDefault","onChange","target","type","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"sNAGMA,EAAW,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAEhB,OADAC,QAAQC,IAAIF,GAER,mCACI,sBAAKG,UAAY,OAAjB,UACI,oBAAIA,UAAY,aAAhB,SAAgCH,EAAII,QACpC,qBAAKD,UAAY,YAAjB,SACI,qBAEIE,IAAQL,EAAIM,IACZC,IAAQP,EAAII,OAFJJ,EAAIQ,YAUpCT,EAASU,aAAe,CACpBT,IAAK,CACDQ,GAAI,GACJJ,MAAO,GACPE,IAAK,KAUEP,Q,wBCnCFW,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAnB,GAAQ,IAAD,EACzB,MAAO,CACHQ,GAAIR,EAAIQ,GACRJ,MAAOJ,EAAII,MACXE,IAAG,UAAEN,EAAIoB,cAAN,aAAE,EAAYC,iBAAiBf,QARvB,kBAYZY,GAZY,4CAAH,sDCuCLI,EAlCF,SAAC,GAAoB,IAAD,IAAjBC,aAAiB,MAAT,GAAS,EAC7B,ECHwB,SAAEZ,GAC1B,MAA0Ba,mBAAS,CAC/BP,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAU,WACNlB,EAASC,GACRkB,MAAM,SAAAC,GACHC,YAAW,WACPJ,EAAS,CACLV,KAAMa,EACNL,SAAS,MAEd,UAER,CAAEd,IAIEe,EDjBmBM,CAAaT,GAA/BE,EAAR,EAAQA,QAASR,EAAjB,EAAiBA,KAGjB,OACI,qCACI,mCAAMM,KACLE,GAAW,yCAMRR,EAAKE,KAAI,SAAEnB,GAAF,OACL,cAACiC,EAAD,CAEIjC,IAAOA,GADAA,EAAIQ,WEHpB0B,EAdE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,6BAEQhB,cAAIgB,GACF,SAACC,GAAD,OAAO,cAAC,EAAD,CAAgBb,MAASa,GAAZA,S,QCyCrBC,EA7CH,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACX,EAAoCd,mBAAS,IAA7C,mBAAOe,EAAP,KAAmBC,EAAnB,KAgBA,OACI,mCACI,qBAAKrC,UAAU,8CAAf,SACI,sBAAKA,UAAU,kBAAf,UAEI,mBAAGA,UAAU,eAAesC,KAAO,IAAnC,2BACA,uBAAMtC,UAAU,SAASuC,SAhBpB,SAACC,GAEdJ,EAAWK,KAAKC,OAAU,GAC1BP,GAAc,SAAA3B,GAAQ,OAAK4B,GAAL,mBAAoB5B,OAE9C6B,EAAc,IACdG,EAAEG,kBAUU,UACI,uBACI3C,UAAU,oBACVoB,MAAQgB,EACRQ,SAxBH,SAACJ,GAClBH,EAAeG,EAAEK,OAAOzB,QAwBJ0B,KAAK,SAET,wBACI9C,UAAU,0BACV8C,KAAK,SAFT,gCCpBTC,EAXM,WACjB,MAAoC1B,mBAAS,CAAC,gBAA9C,mBAAO2B,EAAP,KAAmBb,EAAnB,KAEA,OACI,qCACI,cAAC,EAAD,CAAKA,cAAkBA,IACvB,cAAC,EAAD,CAAUH,OAAWgB,QCFjCC,IAASC,OAEL,cAAC,EAAD,IAGFC,SAASC,eAAe,W","file":"static/js/main.bdec86da.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst GiftItem = ( {img} ) => {\r\n    console.log(img);\r\n    return(\r\n        <>\r\n            <div className = \"card\">\r\n                <h4 className = \"card-title\" >{ img.title }</h4>\r\n                <div className = \"card-body\">\r\n                    <img \r\n                        key = { img.id }\r\n                        src = { img.url }\r\n                        alt = { img.title }\r\n                    />\r\n                </div> \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGiftItem.defaultProps = {\r\n    img: {\r\n        id: '',\r\n        title: '',\r\n        url: ''\r\n    }\r\n}\r\nGiftItem.propTypes = {\r\n    img: PropTypes.shape({\r\n        id: PropTypes.string,\r\n        title: PropTypes.string,\r\n        url: PropTypes.string\r\n    })\r\n}\r\nexport default GiftItem;","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=EwQTAp5D58ZFSB1ZUhoUv7nlKcfh34W0`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    }\r\n    )\r\n    return gifs;\r\n}\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport GifItem from './GifItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs.js';\r\n\r\nconst Item = ({ value = '' }) => {\r\n    const { loading, data } = useFetchGifs(value);\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3> {value}</h3>\r\n            {loading && <p>Cargando</p>}\r\n\r\n\r\n\r\n\r\n            {\r\n                data.map(( img ) =>\r\n                    <GifItem\r\n                        key = {img.id}\r\n                        img = {img}\r\n                    />\r\n\r\n\r\n\r\n\r\n\r\n                )\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nItem.propTypes = {\r\n    value: PropTypes.string\r\n}\r\n\r\nexport default Item;","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../utils/api';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n        .then( imgs => {\r\n            setTimeout(()=> {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            }, 100);\r\n        });\r\n    }, [ category ]);\r\n    \r\n\r\n\r\n    return state;\r\n}","import React from 'react';\r\nimport { map } from 'lodash';\r\nimport Item from './Item';\r\nconst ListItem = ({ values }) => {\r\n    return(\r\n      <ol>\r\n          {\r\n              map(values,\r\n                (v) => <Item key = {v} value = {v} />\r\n                )\r\n          }\r\n      </ol>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ListItem;\r\n","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Nav = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        \r\n        if( inputValue.trim.length <  2 ){\r\n            setCategories(category => [inputValue, ...category] );\r\n        } \r\n        setInputValue('');\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div className=\"container-fluid\">\r\n\r\n                    <a className=\"navbar-brand\" href = \".\">GiftExpertApp</a>\r\n                    <form className=\"d-flex\" onSubmit={ handleSubmit }>\r\n                        <input \r\n                            className=\"form-control me-2\"\r\n                            value={ inputValue }\r\n                            onChange= { handleChange } \r\n                            type=\"text\" />\r\n                            \r\n                        <button\r\n                            className=\"btn btn-outline-primary\"\r\n                            type=\"submit\"\r\n                        >Agregar</button>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nNav.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Nav;\r\n","import React, {useState} from 'react';\r\nimport ListItem from './ListItem';\r\nimport Nav from './Nav'\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['dragon ball'])\r\n\r\n    return (\r\n        <>\r\n            <Nav setCategories = { setCategories }></Nav>\r\n            <ListItem values = { categories } />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './components/GifExpertApp';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp ></GifExpertApp>\n  \n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}